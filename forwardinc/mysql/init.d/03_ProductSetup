#!/bin/sh
# * ----------------------------------------------------------------------
# *               Proprietary and Confidential Information
# *
# * This material contains, and is part of a computer software program
# * which is, proprietary and confidential information owned by CA INC.
# * The program, including this material, may not be duplicated, disclosed 
# * or reproduced in whole or in part for any purpose without the express 
# * written authorization of CA. All authorized reproductions must be marked
# * with this legend.
# *
# *                          Copyright (c) 2015
# *                                  CA
# *                          All rights reserved
# *
# * ----------------------------------------------------------------------
# *
# * Identity Manager - ForwardInc Demo - MySQL Database Init
# *
# * ----------------------------------------------------------------------

MYSQL_DBNAME_OBJECTSTORE="IM_ObjectStore"
MYSQL_DBNAME_TASKPERSISTENCE="IM_TaskPersistence"
MYSQL_DBNAME_ARCHIVE="IM_Archive"
MYSQL_DBNAME_AUDIT="IM_Audit" 
MYSQL_DBNAME_SNAPSHOT="IM_Snapshot"
MYSQL_DBNAME_WORKPOINT="IM_WorkPoint"
MYSQL_DBNAME_USERSTORE="IM_UserStore"
MYSQL_DB_IMUSER="caim"
MYSQL_DB_IMUSER_PW="HelloWorld"

echoerr() { 
	echo "$@" 1>&2; 
}

# Params - DB Name, DB User, SQL File
createDatabase() {
	echo "CREATE DATABASE IF NOT EXISTS $1;" >> "$3"
	echo "GRANT ALL ON $1.* TO '$2'@'%' ;" >> "$3"
}

# Paramas - Input SQL File, Output SQL File, Database Name
importSqlScript() {
	if [ -e $1 ]; then
		echo "Attempting to import SQL script [$1] for database [$3] using init-script [$2]"
		echo "USE $3;" >> "$2"
		cat "$1" >> "$2"
		echo "------- Success!"
	else
		echoerr "------- FAILED: Input SQL File [$1] not found!"
		exit 1
	fi
}

createProductDbs() {
	# Create IM User
	echo "Creating IM Databases"
	echo "CREATE USER '$MYSQL_DB_IMUSER'@'%' IDENTIFIED BY '$MYSQL_DB_IMUSER_PW' ;" >> "$MYSQL_TMP_FILE"

	# Object Store
	if [ ! -d "${MYSQL_DATA}/${MYSQL_DBNAME_OBJECTSTORE}" ]; then
		echo "---- Creating Object Store database"
		createDatabase $MYSQL_DBNAME_OBJECTSTORE $MYSQL_DB_IMUSER $MYSQL_TMP_FILE
	fi

	# Task Persistence
	if [ ! -d $MYSQL_DATA/$MYSQL_DBNAME_TASKPERSISTENCE ]; then
		echo "---- Creating Task Persistence database"
		createDatabase $MYSQL_DBNAME_TASKPERSISTENCE $MYSQL_DB_IMUSER $MYSQL_TMP_FILE
	fi

	# Archive
	if [ ! -d $MYSQL_DATA/$MYSQL_DBNAME_ARCHIVE ]; then
		echo "---- Creating Archive database"
		createDatabase $MYSQL_DBNAME_ARCHIVE $MYSQL_DB_IMUSER $MYSQL_TMP_FILE
	fi

	# Audit
	if [ ! -d $MYSQL_DATA/$MYSQL_DBNAME_AUDIT ]; then
		echo "---- Creating Audit database"
		createDatabase $MYSQL_DBNAME_AUDIT $MYSQL_DB_IMUSER $MYSQL_TMP_FILE
	fi

	# Snapshot
	if [ ! -d $MYSQL_DATA/$MYSQL_DBNAME_SNAPSHOT ]; then
		echo "---- Creating Snapshot database"
		createDatabase $MYSQL_DBNAME_SNAPSHOT $MYSQL_DB_IMUSER $MYSQL_TMP_FILE
	fi

	# Workpoint
	if [ ! -d $MYSQL_DATA/$MYSQL_DBNAME_SNAPSHOT ]; then
		echo "---- Creating Workpoint database"
		createDatabase $MYSQL_DBNAME_WORKPOINT $MYSQL_DB_IMUSER $MYSQL_TMP_FILE
	fi

	# IM User Store
#	if [ ! -d $MYSQL_DATA/$MYSQL_DBNAME_USERSTORE ]; then
#		echo "---- Creating Userstore database"
#		createDatabase $MYSQL_DBNAME_USERSTORE $MYSQL_DB_IMUSER $MYSQL_TMP_FILE
		
		# Add IM User Store Tables
#		importSqlScript $MYSQL_USERSTORE_CREATE_SCRIPT $MYSQL_TMP_FILE $MYSQL_DBNAME_USERSTORE
#	fi
}


# Generate psuedo-random MySQL Root password if it hasn't already been done
echo "Generating psuedo-random password for mysql root account..."
MYSQL_ROOT_PASSWORD=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | sed 1q)
echo $MYSQL_ROOT_PASSWORD >> ${MYSQL_DATA}/.root_secret
echo "----- Success! [${MYSQL_ROOT_PASSWORD}]"


# Create system database
echo Attempting to create system databases at [${MYSQL_DATA}]...
mysql_install_db --user=mysql --datadir=/usr/local/mysql/data

# These statements _must_ be on individual lines, and _must_ end with
# semicolons (no line breaks or comments are permitted).
# TODO proper SQL escaping on ALL the things D:
cat > "$MYSQL_TMP_FILE" <<-EOSQL 
DELETE FROM mysql.user ; 
CREATE USER 'root'@'%' IDENTIFIED BY '${MYSQL_ROOT_PASSWORD}' ;
	GRANT ALL ON *.* TO 'root'@'%' WITH GRANT OPTION ; 
DROP DATABASE IF EXISTS test ; 
EOSQL

createProductDbs

# Flush Privileges
echo 'FLUSH PRIVILEGES ;' >> "$MYSQL_TMP_FILE"
